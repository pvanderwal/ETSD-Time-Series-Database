Offers high reliability, each 'Block' of data occupies 1 512byte sector on hard drive, thumb drive or SD card.
Each Block is self contained, so even if directory table is damaged you might be able to recover data by scanning Sectors.

Note: A 'Channel' is the source of the data, a 'Stream' is the data coming from the Channel
Header for Data Blocks
    4 bytes    Epoch time at start of page (time when first ECM packet received)
    2 bytes    MSb x2 = user ID | 7 bits =  Total intervals | 7 bits = Valid intervals    Note:  Unit Unique ID (UUID) = first 9 bits
    2 bytes    Auto-Scaling(default) for up to 8 Channels, 2 bits per Channel 1,2,4,8x  (if not using autoscale can be retasked by user)
                        Note: 	Autoscaling can handle values up to 524,287 (with a small storage error)

This leaves 504 bytes  for data 
 
The first block of each etsd file contains configuration data that maps Source Channels to Destination Streams.       
    4 bytes 0x43666745  "CfgE"      Note: equals epoch date October 31, 2005 6:49:41 PM  (note: vers 1.0 only supports 1 block headers)
    2 bytes dbInfo      MSbx4: userID  | 6 bits: Total intervals | 6 bits: # of channels  //little endian
    2 bytes Intv Time   Note:  maximum interval = ~18 hours
    1 byte  label size 1/2.  Multiply by 2 for label size. 
    1 byte  extra-data  Number of bytes reserved for extra data

    # of channels x 2 bytes per channel
        1 byte:     Source:       (MSbx2 >> 6) 0=Native(GEM, ECM, etc.), 1=SHM, 2=Other, 3=Other | (6 bits) source channel #   
        1 byte:     Destination:  MSbx1 RRD | (64) 0=guage/1=counter | (32) save register | (16) Signed Integer | LSbx4 Stream Type  
                            Note: MSb^ indicates saving to external database, doesn't have to be RRD<opt>

    remaining bytes: etsd Channel labels, each label is a variable length and null terminated

  ETSD Stream Types           bits per interval
    10 = AutoScale              (16)   up to 8 channels are available and automatically allocated (ONLY works with unsigned Ints!!!) 
    9 = Extended Full Stream    (18)
    8 = Full Stream             (16)  
    5 = Extended Half Stream    (10)
    4 = Half Stream             (8)
    3 = Extended Quarter Stream (6)
    2 = Quarter Stream          (4)
    1 = Two bit stream          (2)
    
    0 = don't save to ETSD

The following types are not currently supported but might be added in a future version
   Double Stream    			32 bits                
   Large Stream     			24 bits      
   Single Precision floating point  	32 bits  
   1/2 Precision floating point     	16 bits 
   	See https://en.wikipedia.org/wiki/Half-precision_floating-point_format 
	    for limitations on 1/2 precision floatsPlanned enhancements
Planned enhancements
    support signed integers (almost ready)
    Add 32bit signed & unsigned int streams
    Add 1/2 precision floating point support (especially ARM version)
    Add single precision floating point support
Possible     enhancements
    optional 1024 byte blocks
    optional extended headers for 512byte blocks 
    24 bit streams, plus extended?
Maybe in version 2
    use 1024 or 2048 byte blocks instead of 512
        this would allow more than 100 channels, potentially up to 255?


ECM Channel Numbers under ETSD
32 bit channels
    Ch# 	Brultech label
    1   	Ch1A
    2   	Ch2A
    3   	Ch1P
    4   	Ch2P
    5   	Aux1
    6   	Aux2
    7   	Aux3
    8   	Aux4
    9   	Aux5

16 bit channels
    Ch#
    10  	DCV (Connected to Aux5)
    11  	ACV
    24  	CH1 Current
    25  	CH2 Current
